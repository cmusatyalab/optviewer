OPT viewer
==========

This is a web-browser based viewer for 3d datasets that are stored as
stacks of images.

Most of the logic is implemented in client-side javascript so by hardcoding
some paths and settings in the webpage it is possible to run this using a
webserver that only serves static content. However for quick setup and testing
it is also possible to run this with a small Flask webapp that pulls image data
directly from unmodified dataset Zip archive files.


Installation using the Flask web application
--------------------------------------------
Setup a virtualenv with the necessary dependencies and run the webapp,

    # (apt-get or yum) install python-virtualenv
    $ virtualenv env
    $ env/bin/pip install -r requirements.txt

Update IMAGE_NAME in flaskapp.py, we will export data from zip archives in the
current folder that are named,

    <IMAGE_NAME>_Sagittal.zip
    <IMAGE_NAME>_Coronal.zip
    <IMAGE_NAME>_Transverse.zip

Start the Flask web application

    $ env/bin/python flaskapp.py

Now you should be able to point your webbrowser at http://localhost:5000/ and
view the dataset.


Installation using static files
-------------------------------
Copy the file templates/viewer.html to a path on your webserver and find and
update sections with {{ }} markers to adjust for the location of javascript
files and asset location and dimensions.

Extract the datasets archives into a single directory.

        asset/100000.png     // SagittalSections
        ...
        asset/100511.png
        asset/200000.png     // CoronalSections
        ...
        asset/300000.png     // TransverseSections
        ...

And set optview.urls to
        'sagittal':   "asset/100FRAME.png",
        'coronal':    "asset/200FRAME.png",
        'transverse': "asset/300FRAME.png",

It is probably easiest to completely remove the <div id="bookmarks"> which
provides the navigation bookmarks on the right side, especially as different
assets may have different dimensions and would need to use different offsets.

